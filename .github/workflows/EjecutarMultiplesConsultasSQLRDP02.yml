# .github/workflows/database-replication.yml
name: Database Replication

# Este workflow se activa cuando recibe un dispatch desde la API
on:
  repository_dispatch:
    types: [database-replication]

jobs:
  replicate-to-databases:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout transpiled branch
        uses: actions/checkout@v3
        with:
          ref: transpilado  # Usar rama con código JavaScript transpilado

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"
          
      # ¡NO INSTALAMOS NADA! Los node_modules ya están en la rama transpilada
          
      - name: Execute database replication
        run: node ./jobs/replications/ReplicateToRDP02Instances.js
        env:
          # Parámetros del evento
          SQL_QUERY: ${{ github.event.client_payload.sql }}
          SQL_PARAMS: ${{ toJSON(github.event.client_payload.params) }}
          INSTANCIAS_A_ACTUALIZAR: ${{ toJSON(github.event.client_payload.instanciasAActualizar) }}

          # Variables para las conexiones de base de datos
          RDP02_INS1_DATABASE_URL: ${{ secrets.RDP02_INS1_DATABASE_URL }}
          RDP02_INS2_DATABASE_URL: ${{ secrets.RDP02_INS2_DATABASE_URL }}
          RDP02_INS3_DATABASE_URL: ${{ secrets.RDP02_INS3_DATABASE_URL }}
          ENTORNO: ${{ secrets.ENTORNO }}

      - name: Notify completion
        if: always()
        run: |
          RESULT="${{ job.status }}"
          echo "Replicación completada con estado: $RESULT"

          if [ "$RESULT" = "success" ]; then
            echo "✅ Todas las operaciones se completaron exitosamente"
          else
            echo "❌ Ocurrieron errores durante la replicación"
          fi